@model IEnumerable<PF6_Team1_DotNetAssignment.Models.Project>
@using Microsoft.AspNetCore.Http


@{
    ViewData["Title"] = "Index";
}

<!DOCTYPE html>
<html>



<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no">
    <title>Untitled</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.0/css/bootstrap.min.css">
</head>

<body>
    <main style="margin-top: 8%;">
        <h1>My Projects</h1>

        <p>
            <a asp-controller="Project" asp-action="Create" class="btn btn-dark">Create New</a>
        </p>
        <!-- Start: 1 Row 1 Column -->
        <!-- End: 1 Row 1 Column -->
        <!-- Start: 1 Row 2 Columns -->
        <div>
            @foreach (var item in Model)
            {
                <div class="container" style="border-style:solid; height:70%">
                    <h2 class="text-center"> @Html.DisplayFor(modelItem => item.Title)</h2>
                    <div class="row">
                        <div class="col-md-6 col-lg-6">
                            <img src="~/img/@Html.DisplayFor(modelItem => item.FileName)" height="100%" style="margin-left:auto; display:block; width:100%; margin-right:auto;">
                        </div>
                        <div class="col-md-6 col-lg-6">
                            <p style="font-size:medium">@Html.DisplayFor(modelItem => item.Description)</p>
                            <label class="text-muted" style="font-weight:800; font-size:larger">Category: </label><span style="font-weight: 600; font-size:large"> @Html.DisplayFor(modelItem => item.Category)</span>
                            <br />
                            <label class="text-muted" style="font-weight: 800;font-size:larger">Country: </label><span style="font-weight: 600; font-size:large"> @Html.DisplayFor(modelItem => item.Country)</span>
                            <br />
                            <label class="text-muted" style="font-weight: 800; font-size:larger ">Current Funds: </label><span style="font-weight: 600; font-size:large"> @Html.DisplayFor(modelItem => item.CurrentFunds)</span>
                            <br />
                            <label class="text-muted" style="font-weight: 800; font-size:larger">Required Funds: </label><span style="font-weight: 600; font-size:large"> @Html.DisplayFor(modelItem => item.RequiredFunds)</span>
                            <br />
                            <label class="text-muted" style="font-weight: 800; font-size:larger">Estimated Deadline: </label>

                            <span style="font-weight:600;"> @Html.DisplayFor(modelItem => item.Deadline)</span>
                            <br />
                            <br />
                            <a asp-controller="Project" asp-action="Details" asp-route-id="@item.ProjectId" class="btn btn-dark">Details</a>
                            <br />
                            <br />
                            <a asp-controller="Project" asp-action="Delete" asp-route-id="@item.ProjectId" class="btn btn-danger"> Delete </a>
                        </div>

                    </div>
                </div>

            }
        </div>
        </div>
        <!-- End: 1 Row 2 Columns -->

    </main>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.0/js/bootstrap.bundle.min.js"></script>
</body>



</html>

@section Scripts
{
    <script>
        const uri = 'Project';



        function getProject() {
            fetch(`${uri}/Get`)
                .then(response => response.json())
                .then(data => _displayProject(data))
                .catch(error => console.error('Unable to get projects.', error));
        }
        function deleteProject(id) {
            fetch(`${uri}/Delete/${id}`, {
                method: 'DELETE'
            })
                .then(() => getProject())
                .catch(error => console.error('Unable to delete projects.', error));
        }
        function _displayProject(data) {
            const tBody = document.getElementById('projects');
            tBody.innerHTML = '';
            const anchorElement = document.createElement('a');
            data.forEach(item => {
                let detailsAnchor = anchorElement.cloneNode(false);
                detailsAnchor.innerText = 'Details';
                detailsAnchor.setAttribute('href', `${uri}/Details/${item.id}`);
                let deleteAnchor = anchorElement.cloneNode(false);
                deleteAnchor.innerText = 'Delete';
                deleteAnchor.setAttribute('onclick', `deleteProject(${item.id})`);
                deleteAnchor.setAttribute('href', 'javascript:void(0)');
                let tr = tBody.insertRow();
                let td1 = tr.insertCell(0);
                let TitleNode = document.createTextNode(item.title);
                td1.appendChild(TitleNode);
                let td2 = tr.insertCell(1);
                let DescriptionNode = document.createTextNode(item.description);
                td2.appendChild(DescriptionNode);
                let td3 = tr.insertCell(2);
                let CategoryNode = document.createTextNode(item.category);
                td3.appendChild(CategoryNode);
                let td4 = tr.insertCell(3);
                let CountryNode = document.createTextNode(item.country);
                td4.appendChild(CountryNode);
                let td5 = tr.insertCell(4);
                let MyImageNode = document.createTextNode(item.MyImage);
                td5.appendChild(MyImageNode);
                let td6 = tr.insertcell(5);
                let myvideonode = document.createtextnode(item.myvideo);
                td6.appendchild(myvideonode);
                let td7 = tr.insertCell(6);
                let RequiredFundsNode = document.createTextNode(item.RequiredFunds);
                td7.appendChild(RequiredFundsNode);
                let td8 = tr.insertCell(7);
                let CurrentFundsNode = document.createTextNode(item.CurrentFunds);
                td8.appendChild(CurrentFundsNode);
                let td9 = tr.insertCell(8);
                let CreatedDateNode = document.createTextNode(item.CreatedDate);
                td9.appendChild(CreatedDateNode);
                let td10 = tr.insertCell(9);
                let DeadlineNode = document.createTextNode(item.Deadline);
                td10.appendChild(DeadlineNode);
                let td11 = tr.insertCell(10);
                let AmountOfViewsNode = document.createTextNode(item.AmountOfViews);
                td11.appendChild(AmountOfViewsNode);
                let td12 = tr.insertCell(11);
                td12.appendChild(detailsAnchor);
                let td13 = tr.insertCell(12);
                td13.appendChild(deleteAnchor);
            });
        }
    </script>
}

